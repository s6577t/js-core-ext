;
/*
Copyright (c) 2010 Ryan Schuft (ryan.schuft@gmail.com)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
/*
  This code is based in part on the work done in Ruby to support
  infection as part of Ruby on Rails in the ActiveSupport's Inflector
  and Inflections classes.  It was initally ported to Javascript by
  Ryan Schuft (ryan.schuft@gmail.com) in 2007.

  The code is available at http://code.google.com/p/inflection-js/

  The basic usage is:
    1. Include this script on your web page.
    2. Call functions on any String object in Javascript

  Currently implemented functions:

    String.pluralize(plural) == String
      renders a singular English language noun into its plural form
      normal results can be overridden by passing in an alternative

    String.singularize(singular) == String
      renders a plural English language noun into its singular form
      normal results can be overridden by passing in an alterative

    String.camelize(lowFirstLetter) == String
      renders a lower case underscored word into camel case
      the first letter of the result will be upper case unless you pass true
      also translates "/" into "::" (underscore does the opposite)

    String.underscore() == String
      renders a camel cased word into words seperated by underscores
      also translates "::" back into "/" (camelize does the opposite)

    String.humanize(lowFirstLetter) == String
      renders a lower case and underscored word into human readable form
      defaults to making the first letter capitalized unless you pass true

    String.capitalize() == String
      renders all characters to lower case and then makes the first upper

    String.dasherize() == String
      renders all underbars and spaces as dashes

    String.titleize() == String
      renders words into title casing (as for book titles)

    String.demodulize() == String
      renders class names that are prepended by modules into just the class

    String.tableize() == String
      renders camel cased singular words into their underscored plural form

    String.classify() == String
      renders an underscored plural word into its camel cased singular form

    String.foreign_key(dropIdUbar) == String
      renders a class name (camel cased singular noun) into a foreign key
      defaults to seperating the class from the id with an underbar unless
      you pass true

    String.ordinalize() == String
      renders all numbers found in the string into their sequence like "22nd"
*/
/*
  This sets up a container for some constants in its own namespace
  We use the window (if available) to enable dynamic loading of this script
  Window won't necessarily exist for non-browsers.
*/
window&&!window.InflectionJS&&(window.InflectionJS=null),InflectionJS={uncountable_words:["equipment","information","rice","money","species","series","fish","sheep","moose","deer","news"],plural_rules:[[new RegExp("(m)an$","gi"),"$1en"],[new RegExp("(pe)rson$","gi"),"$1ople"],[new RegExp("(child)$","gi"),"$1ren"],[new RegExp("^(ox)$","gi"),"$1en"],[new RegExp("(ax|test)is$","gi"),"$1es"],[new RegExp("(octop|vir)us$","gi"),"$1i"],[new RegExp("(alias|status)$","gi"),"$1es"],[new RegExp("(bu)s$","gi"),"$1ses"],[new RegExp("(buffal|tomat|potat)o$","gi"),"$1oes"],[new RegExp("([ti])um$","gi"),"$1a"],[new RegExp("sis$","gi"),"ses"],[new RegExp("(?:([^f])fe|([lr])f)$","gi"),"$1$2ves"],[new RegExp("(hive)$","gi"),"$1s"],[new RegExp("([^aeiouy]|qu)y$","gi"),"$1ies"],[new RegExp("(x|ch|ss|sh)$","gi"),"$1es"],[new RegExp("(matr|vert|ind)ix|ex$","gi"),"$1ices"],[new RegExp("([m|l])ouse$","gi"),"$1ice"],[new RegExp("(quiz)$","gi"),"$1zes"],[new RegExp("s$","gi"),"s"],[new RegExp("$","gi"),"s"]],singular_rules:[[new RegExp("(m)en$","gi"),"$1an"],[new RegExp("(pe)ople$","gi"),"$1rson"],[new RegExp("(child)ren$","gi"),"$1"],[new RegExp("([ti])a$","gi"),"$1um"],[new RegExp("((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$","gi"),"$1$2sis"],[new RegExp("(hive)s$","gi"),"$1"],[new RegExp("(tive)s$","gi"),"$1"],[new RegExp("(curve)s$","gi"),"$1"],[new RegExp("([lr])ves$","gi"),"$1f"],[new RegExp("([^fo])ves$","gi"),"$1fe"],[new RegExp("([^aeiouy]|qu)ies$","gi"),"$1y"],[new RegExp("(s)eries$","gi"),"$1eries"],[new RegExp("(m)ovies$","gi"),"$1ovie"],[new RegExp("(x|ch|ss|sh)es$","gi"),"$1"],[new RegExp("([m|l])ice$","gi"),"$1ouse"],[new RegExp("(bus)es$","gi"),"$1"],[new RegExp("(o)es$","gi"),"$1"],[new RegExp("(shoe)s$","gi"),"$1"],[new RegExp("(cris|ax|test)es$","gi"),"$1is"],[new RegExp("(octop|vir)i$","gi"),"$1us"],[new RegExp("(alias|status)es$","gi"),"$1"],[new RegExp("^(ox)en","gi"),"$1"],[new RegExp("(vert|ind)ices$","gi"),"$1ex"],[new RegExp("(matr)ices$","gi"),"$1ix"],[new RegExp("(quiz)zes$","gi"),"$1"],[new RegExp("s$","gi"),""]],non_titlecased_words:["and","or","nor","a","an","the","so","but","to","of","at","by","from","into","on","onto","off","out","in","over","with","for"],id_suffix:new RegExp("(_ids|_id)$","g"),underbar:new RegExp("_","g"),space_or_underbar:new RegExp("[ _]","g"),uppercase:new RegExp("([A-Z])","g"),underbar_prefix:new RegExp("^_"),apply_rules:function(a,b,c,d){if(d)a=d;else{var e=c.indexOf(a.toLowerCase())>-1;if(!e)for(var f=0;f<b.length;f++)if(a.match(b[f][0])){a=a.replace(b[f][0],b[f][1]);break}}return a}},Array.prototype.indexOf||(Array.prototype.indexOf=function(a,b,c){b||(b=-1);var d=-1;for(var e=b;e<this.length;e++)if(this[e]===a||c&&c(this[e],a)){d=e;break}return d}),String.prototype._uncountable_words||(String.prototype._uncountable_words=InflectionJS.uncountable_words),String.prototype._plural_rules||(String.prototype._plural_rules=InflectionJS.plural_rules),String.prototype._singular_rules||(String.prototype._singular_rules=InflectionJS.singular_rules),String.prototype._non_titlecased_words||(String.prototype._non_titlecased_words=InflectionJS.non_titlecased_words),String.prototype.pluralize||(String.prototype.pluralize=function(a){return InflectionJS.apply_rules(this,this._plural_rules,this._uncountable_words,a)}),String.prototype.singularize||(String.prototype.singularize=function(a){return InflectionJS.apply_rules(this,this._singular_rules,this._uncountable_words,a)}),String.prototype.camelize||(String.prototype.camelize=function(a){var b=this.toLowerCase(),c=b.split("/");for(var d=0;d<c.length;d++){var e=c[d].split("_"),f=a&&d+1===c.length?1:0;for(var g=f;g<e.length;g++)e[g]=e[g].charAt(0).toUpperCase()+e[g].substring(1);c[d]=e.join("")}b=c.join("::");return b}),String.prototype.underscore||(String.prototype.underscore=function(){var a=this,b=a.split("::");for(var c=0;c<b.length;c++)b[c]=b[c].replace(InflectionJS.uppercase,"_$1"),b[c]=b[c].replace(InflectionJS.underbar_prefix,"");a=b.join("/").toLowerCase();return a}),String.prototype.humanize||(String.prototype.humanize=function(a){var b=this.toLowerCase();b=b.replace(InflectionJS.id_suffix,""),b=b.replace(InflectionJS.underbar," "),a||(b=b.capitalize());return b}),String.prototype.capitalize||(String.prototype.capitalize=function(){var a=this.toLowerCase();a=a.substring(0,1).toUpperCase()+a.substring(1);return a}),String.prototype.dasherize||(String.prototype.dasherize=function(){var a=this;a=a.replace(InflectionJS.space_or_underbar,"-");return a}),String.prototype.titleize||(String.prototype.titleize=function(){var a=this.toLowerCase();a=a.replace(InflectionJS.underbar," ");var b=a.split(" ");for(var c=0;c<b.length;c++){var d=b[c].split("-");for(var e=0;e<d.length;e++)this._non_titlecased_words.indexOf(d[e].toLowerCase())<0&&(d[e]=d[e].capitalize());b[c]=d.join("-")}a=b.join(" "),a=a.substring(0,1).toUpperCase()+a.substring(1);return a}),String.prototype.demodulize||(String.prototype.demodulize=function(){var a=this,b=a.split("::");a=b[b.length-1];return a}),String.prototype.tableize||(String.prototype.tableize=function(){var a=this;a=a.underscore().pluralize();return a}),String.prototype.classify||(String.prototype.classify=function(){var a=this;a=a.camelize().singularize();return a}),String.prototype.foreign_key||(String.prototype.foreign_key=function(a){var b=this;b=b.demodulize().underscore()+(a?"":"_")+"id";return b})
;
;
// supplement.js JavaScript Extras, version: 0.1.0
// (c) 2011 Oliver Nightingale
//
//  Released under MIT license.
//
/**
 * Namespace
 * @private
 */
supplement=function(){var a=[],b=function(b,c,d){a.forEach(function(a){a(b,c,d)})},c=function(b){if(typeof b!="function")throw new TypeError;a.push(b)},d=function(a,b,c){this.defineMethod(a,b,a[c])},e=function(a,c,d){if(a[c])return b(a,c,d);typeof Object.defineProperties=="function"?Object.defineProperty(a,c,{value:d,enumerable:!1,configurable:!1}):a[c]=d};return{defineAlias:d,defineMethod:e,onClash:c}}(),supplement.defineMethod(Array,"wrap",function(a){"use strict";if(a==null||a==undefined)return[];if(Array.isArray(a))return a;return[a]}),supplement.defineMethod(Array.prototype,"uniq",function(){"use strict";return this.reduce(function(a,b){a.indexOf(b)===-1&&a.push(b);return a},[])}),supplement.defineMethod(Array,"range",function(a,b){"use strict";if(typeof a!="number"||typeof b!="number")throw new TypeError("Array.range called with no range start or end");var c=[];for(var d=a;d<=b;d++)c.push(d);return c}),supplement.defineMethod(Array.prototype,"detect",function(a,b){"use strict";var c=this.length,d=null;for(var e=0;e<c;e++)if(a.call(b,this[e],e,this)){d=this[e];break}return d}),supplement.defineMethod(Array,"toArray",function(a){"use strict";if(typeof a=="string")throw new TypeError("Array.toArray called on non-arguments");return Array.prototype.slice.call(a,0)}),supplement.defineMethod(Array.prototype,"head",function(){"use strict";return this[0]}),supplement.defineMethod(Array.prototype,"tail",function(){"use strict";return this.slice(1)}),supplement.defineMethod(Array.prototype,"compact",function(){"use strict";return this.filter(function(a){return a!==null&&a!==undefined})}),supplement.defineMethod(Array.prototype,"group",function(a,b){"use strict";if(typeof a!="function")throw new TypeError;return this.reduce(function(c,d,e,f){var g=a.call(b,d,e,f);c[g]||(c[g]=[]),c[g].push(d);return c},{})}),supplement.defineMethod(Array.prototype,"reject",function(a,b){"use strict";if(typeof a!="function")throw new TypeError;return this.reduce(function(c,d,e,f){a.call(b,d,e,f)||c.push(d);return c},[])}),supplement.defineMethod(Array.prototype,"take",function(a){"use strict";if(!a)throw new TypeError;return this.slice(0,a)}),supplement.defineMethod(Array.prototype,"drop",function(a){"use strict";if(!a)throw new TypeError;return this.slice(a)}),supplement.defineMethod(Function.prototype,"singleUse",function(){"use strict";var a=this,b=!1;return function(){if(!b){b=!0;var c=Array.prototype.slice.call(arguments,0);return a.apply(null,c)}}}),supplement.defineMethod(Function.prototype,"curry",function(){"use strict";var a=Array.prototype.slice.call(arguments,0),b=this;return function(){Array.prototype.slice.call(arguments,0).forEach(function(b){a.push(b)});return b.apply(null,a)}}),supplement.defineMethod(Function.prototype,"throttle",function(a){"use strict";var b=this,c,d;return function(){var e=Array.prototype.slice.call(arguments,0);c=new Date,d=d||0;if(!(c-d<a)){d=c;return b.apply(null,e)}}}),supplement.defineMethod(Function.prototype,"debounce",function(a){"use strict";var b=this,c;return function(){var d=Array.prototype.slice.call(arguments,0);clearTimeout(c),c=setTimeout(function(){return b.apply(null,d)},a)}}),supplement.defineMethod(Number.prototype,"times",function(a){"use strict";for(var b=0;b<this;b++)a(b)}),supplement.defineMethod(Number.prototype,"seconds",function(){"use strict";return this*1e3}),supplement.defineAlias(Number.prototype,"second","seconds"),supplement.defineMethod(Number.prototype,"minutes",function(){"use strict";return this.seconds()*60}),supplement.defineAlias(Number.prototype,"minute","minutes"),supplement.defineMethod(Number.prototype,"hours",function(){"use strict";return this.minutes()*60}),supplement.defineAlias(Number.prototype,"hour","hours"),supplement.defineMethod(Number.prototype,"pad",function(a){"use strict";if(typeof a!="number")throw new TypeError;if(a<0)throw new RangeError;var b=this+"";while(Math.floor(a--))b="0"+b;return b}),supplement.defineMethod(Object,"values",function(a){"use strict";if(a!==Object(a))throw new TypeError("Object.values called on non-object");return Object.keys(a).map(function(b){return a[b]})}),supplement.defineMethod(Object,"provide",function(a){"use strict";if(a!==Object(a))throw new TypeError("Object.provide called on non-object");var b=Array.prototype.slice.call(arguments,1),c=a;b.forEach(function(a){if(!c[a])c[a]={};else if(c[a]!==Object(c[a]))throw new TypeError("Object.provide can only add properties to a plain object");c=c[a]});return c})
;
;
/*
Copyright(c) 2011 Sam Taylor, released under MIT License.
*/
(function(){supplement.defineMethod(Array.prototype,"copy",function(){return Array.toArray(this)}),supplement.defineMethod(Array.prototype,"exclude",function(a){var b=this.indexOf(a);if(b>=0)return this.splice(b,1);return this}),supplement.defineMethod(Array.prototype,"remove",function(a){delete this[this.indexOf(a)];return this}),supplement.defineMethod(Array.prototype,"contains",function(a){return!!this.detect(function(b){return b===a})}),supplement.defineMethod(Array.prototype,"isEmpty",function(a){return this.length===0}),supplement.defineMethod(Array.prototype,"first",function(a){return this[0]}),supplement.defineMethod(Array.prototype,"last",function(a){return this[this.length-1]})})()
;
;
function NotImplemented(){throw"Not Implemented"}function deepCopy(a){return jQuery.extend(!0,{},a)}function shallowCopy(a){return jQuery.extend({},a)}function proxyFunction(a,b){return function(){return b.apply(a,arguments)}}function defaultsFor(a,b){return extend(a).withObject(b)}function overwrite(a){return extend(a,{overwrite:!0})}function extend(a,b){b=b||{},a=a||{};return{withObject:function(){Array.toArray(arguments).forEach(function(c){for(var d in c)if(b.overwrite||typeof a[d]=="undefined"){var e=typeof b.prefix=="undefined"||b.prefix===null?d:""+b.prefix+d;a[e]=c[d]}});return a},mixin:function(a){return typeof a=="function"?this.withObject(new a):this.withObject(a)}}}function uuid(){var a=[],b="0123456789ABCDEF";for(var c=0;c<32;c++)a[c]=b.substr(Math.floor(Math.random()*16),1);a[12]="4",a[16]=b.substr(a[16]&3|8,1);var d=a.join("");return d}override=function(){function b(b,c){for(var d in c)if(typeof b[d]=="function"&&typeof c[d]=="function")b[d]=a(b[d],c[d]);else throw new Error("no function to override: "+d);return b}function a(a,b){return function(){var c=this,d=Array.toArray(arguments);d.unshift(function(){var b=arguments.length>0?Array.toArray(arguments):d.slice(1);return a.apply(c,b)});return b.apply(c,d)}}return function(c){return{withObject:function(d){if(typeof c=="function"&&typeof d=="function")return a(c,d);return b(c,d)}}}}()
;
;
/*
Copyright(c) 2011 Sam Taylor, released under MIT License.
*/
(function(){supplement.defineMethod(Number.prototype,"toDps",function(a){return parseFloat(this.toFixed(a))}),supplement.defineMethod(Number.prototype,"ordinalize",function(a){return this.toString().ordinalize()})})()
;
;
/*
Copyright(c) 2011 Sam Taylor, released under MIT License.
*/
(function(){supplement.defineMethod(String.prototype,"isUpperCase",function(){return this.toLowerCase()!=this}),supplement.defineMethod(String.prototype,"isLowerCase",function(){return this.toUpperCase()!=this}),supplement.defineMethod(String.prototype,"decamelize",function(){var a=[];for(var b=0,c=1;b<this.length;b++,c++){var d=this[b],e=this[c];a.push(d),e&&e.isUpperCase()&&/[a-zA-Z\d]/.test(d)&&a.push(" ")}return a.join("")}),supplement.defineMethod(String.prototype,"variableize",function(a){var b=this,c=b.split(/([^a-z])/g),d=[];for(var e=0;e<c.length;e++){var f=c[e];if(!f)continue;if(f.match(/^[A-Z]$/)){var g=f+c[++e];d.push(g)}else f.match(/[-_]/)?d.push(c[++e].titleize()):d.push(f)}var g=d.filter(function(a){return!a.match(/\s+/g)}).map(function(a){return a.titleize()}).join("");g[0]&&(g=g.split(""),g[0]=a?g[0].toUpperCase():g[0].toLowerCase(),g=g.join("")),g.match(/^\d.*/)&&(g="_"+g);return g}),supplement.defineMethod(String.prototype,"startsWith",function(a){return(new RegExp("^"+a)).test(this)}),supplement.defineMethod(String.prototype,"contains",function(a){return(new RegExp(a)).test(this)}),supplement.defineMethod(String.prototype,"endsWith",function(a){return this.substr(a.length)===a}),supplement.defineMethod(String.prototype,"squash",function(){return this.replace(/^\s+|\s+$/g,"")}),supplement.defineMethod(String.prototype,"enquote",function(a){var b=a||"'";return b+this+b}),supplement.defineMethod(String.prototype,"supplant",function(a){return this.replace(/{([^{}]*)}/g,function(b,c){var d=a[c];return typeof d=="string"||typeof d=="number"||typeof d=="boolean"?d:b})}),supplement.defineMethod(String.prototype,"toFloat",function(){return parseFloat(this)}),supplement.defineMethod(String.prototype,"toInteger",function(){return parseInt(this)}),supplement.defineMethod(String.prototype,"ordinalize",function(){var a=this,b=a.split(/\s+/);for(var c=0;c<b.length;c++){var d=b[c],e=/^\d+$/.exec(d);if(e){var f=parseInt(e[0]),g=d[d.length-2],h=d[d.length-1],i="th";if(!g||g!=="1")switch(h){case"1":i="st";break;case"2":i="nd";break;case"3":i="rd";break;default:}b[c]+=i}}a=b.join(" ");return a})})()
;
